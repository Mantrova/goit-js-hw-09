{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,aAAcC,SAASC,cAAc,uBACrCC,YAAaF,SAASC,cAAc,sBACpCE,cAAeH,SAASC,cAAc,wBACtCG,UAAWJ,SAASC,cAAc,UAyBpC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACNN,EACDI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAM,GAE1BA,EAAA,GAEP,CAlCAT,EAAKM,UAAUW,iBAAiB,UAEhC,SAAyBC,GACvBA,EAAEC,iBAEF,IAAIC,EAAaC,OAAOrB,EAAKC,aAAaqB,OACtCC,EAAgBF,OAAOrB,EAAKI,YAAYkB,OACxCE,EAASH,OAAOrB,EAAKK,cAAciB,OAEvC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCC,QAAQC,IAAIP,EAAYG,EAAeC,GAEvCjB,EAAckB,EAAGL,GAAYQ,MAAK,EAACpB,SAACA,EAAQC,MAAEA,MAC5CoB,EAAA/B,GAASgC,OAAOC,QAAQ,wBAAwBvB,QAAeC,MAAS,IACvEuB,OAAM,EAACxB,SAACA,EAAQC,MAAEA,MACnBoB,EAAA/B,GAASgC,OAAOG,QAAQ,uBAAuBzB,QAAeC,MAAS,IAEzEW,GAAcG,EAEhBvB,EAAKM,UAAU4B,OACjB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css'\n\nconst refs = {\n  delayInputEl: document.querySelector(`input[name=\"delay\"]`),\n  stepInputEl: document.querySelector(`input[name=\"step\"]`),\n  amountInputEl: document.querySelector(`input[name=\"amount\"]`),\n  formBtnEl: document.querySelector(`.form`),\n};\n\nrefs.formBtnEl.addEventListener(`submit`, onCreatePromise);\n\nfunction onCreatePromise(e) {\n  e.preventDefault();\n\n  let firstDelay = Number(refs.delayInputEl.value);\n  let nextStepDelay = Number(refs.stepInputEl.value);\n  let amount = Number(refs.amountInputEl.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    console.log(firstDelay, nextStepDelay, amount);\n\n    createPromise(i, firstDelay).then(({position, delay}) => {\n      Notiflix.Notify.success(`ðŸŽ„ Fulfilled promise ${position} in ${delay}ms`)})\n      .catch(({position, delay}) => {\n      Notiflix.Notify.failure(`ðŸ’£ Rejected promise ${position} in ${delay}ms`)});\n\n    firstDelay += nextStepDelay;\n  };\n  refs.formBtnEl.reset();\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if(shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      } \n    }, delay);\n  });\n};  \n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","delayInputEl","document","querySelector","stepInputEl","amountInputEl","formBtnEl","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","firstDelay","Number","value","nextStepDelay","amount","i","console","log","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.465a9f84.js.map"}